{"version":3,"file":"main.747f8e235f9388eef143.hot-update.js","mappings":"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","sources":["webpack://react_example_theme/./js/src/components/NodeListOnly.jsx","webpack://react_example_theme/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { PASSWORD, USERNAME } from '../config';\r\nimport { encode } from \"base-64\";\r\nimport NodeItem from './NodeItem';\r\nfunction NodeListOnly() {\r\n\r\n  const [content, setContent] = useState([]);\r\n  const [filter, setFilter] = useState(null);\r\n  const [type, setType] = useState('page');\r\n\r\n  const site_url = 'https://shop-site.ddev.site/';\r\n  const api_url = 'jsonapi/node/';\r\n\r\n  const node_types= [\r\n    {id: 'page', 'label': 'Page'},\r\n    {id: 'article', 'label': 'Article'}\r\n  ]\r\n\r\n  const typeSelect = (e) => {\r\n    const type = e.target.value;\r\n    setType(type)\r\n  }\r\n\r\n  const searchOnChange = (e) => {\r\n    const word = e.target.value;\r\n\r\n    setFilter(word.toLowerCase());\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(site_url + api_url + '/' + type, {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Authorization': 'Basic ' + encode(USERNAME + \":\" + PASSWORD),\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      // headers: {\r\n      //   'Authorization': '7XApls2RNEO6xmqVpbehZzbJGLOhtIkwAlHm5nU8ay25rK8XrVmAD1cybGQHr0xA',\r\n      // },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => setContent(data.data))\r\n      .catch(err => console.log('There was an error accessing the API', err));\r\n  }, [type]);\r\n\r\n\r\n  return <>\r\n  {content.length ? <div className=\"content\">\r\n    <div className=\"node-type\">\r\n      {node_types.map(node_type => {\r\n        const checked = node_type.id === type ? true : false\r\n        return <label htmlFor={node_type.id} key={node_type.id}>{node_type.label}\r\n          <input\r\n            id={node_type.id}\r\n            name=\"types\"\r\n            type=\"radio\"\r\n            value={node_type.id}\r\n            onChange={typeSelect}\r\n            checked={checked}\r\n          />\r\n        </label>\r\n      })}\r\n    </div>\r\n    <input type=\"texfield\" name=\"search\" onChange={searchOnChange}/>\r\n    {content.filter((item) => {\r\n      if (!filter) {\r\n        return item;\r\n      }\r\n\r\n      if (filter\r\n        && (item.attributes.title.toLowerCase().includes(filter)\r\n        || item.attributes.body.value.toLowerCase().includes(filter))\r\n      ) {\r\n        return item;\r\n      }\r\n    }).map((item) => <NodeItem key={item.id} {...item.attributes}/>) }\r\n    </div> : ''\r\n  }\r\n  </>\r\n\r\n}\r\n\r\nexport default NodeListOnly\r\n","__webpack_require__.h = () => (\"d5af6092547d985e92b6\")"],"names":["React","useState","useEffect","PASSWORD","USERNAME","encode","NodeItem","NodeListOnly","_s","_useState","_useState2","_slicedToArray","content","setContent","_useState3","_useState4","filter","setFilter","_useState5","_useState6","type","setType","site_url","api_url","node_types","id","typeSelect","e","target","value","searchOnChange","word","toLowerCase","fetch","method","headers","Headers","then","response","json","data","err","console","log","createElement","Fragment","length","className","map","node_type","checked","htmlFor","key","label","name","onChange","item","attributes","title","includes","body","_extends","_c","$RefreshReg$"],"sourceRoot":""}